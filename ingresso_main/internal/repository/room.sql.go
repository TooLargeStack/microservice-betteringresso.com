// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: room.sql

package repository

import (
	"context"
	"encoding/json"

	"github.com/google/uuid"
)

const getRoom = `-- name: GetRoom :one
SELECT id, capacity, type, seats, created_at, updated_at FROM rooms 
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetRoom(ctx context.Context, id uuid.NullUUID) (Room, error) {
	row := q.db.QueryRowContext(ctx, getRoom, id)
	var i Room
	err := row.Scan(
		&i.ID,
		&i.Capacity,
		&i.Type,
		&i.Seats,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}

const updateRoomSeats = `-- name: UpdateRoomSeats :exec
UPDATE rooms SET seats = $2 WHERE id = $1
`

type UpdateRoomSeatsParams struct {
	ID    uuid.NullUUID   `json:"id"`
	Seats json.RawMessage `json:"seats"`
}

func (q *Queries) UpdateRoomSeats(ctx context.Context, arg UpdateRoomSeatsParams) error {
	_, err := q.db.ExecContext(ctx, updateRoomSeats, arg.ID, arg.Seats)
	return err
}
